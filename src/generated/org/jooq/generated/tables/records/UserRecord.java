/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JUser;
import org.jooq.generated.tables.pojos.User;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>slick_prod.USER.EMAIL</code>.
     */
    public void setEmail(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>slick_prod.USER.EMAIL</code>.
     */
    @NotNull
    @Size(max = 100)
    public String getEmail() {
        return (String) get(0);
    }

    /**
     * Setter for <code>slick_prod.USER.PASSWORD</code>.
     */
    public void setPassword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>slick_prod.USER.PASSWORD</code>.
     */
    @NotNull
    @Size(max = 128)
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>slick_prod.USER.REG_DATETIME</code>.
     */
    public void setRegDatetime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>slick_prod.USER.REG_DATETIME</code>.
     */
    @NotNull
    public LocalDateTime getRegDatetime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>slick_prod.USER.REG_ID</code>.
     */
    public void setRegId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>slick_prod.USER.REG_ID</code>.
     */
    @NotNull
    @Size(max = 200)
    public String getRegId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>slick_prod.USER.UPT_DATETIME</code>.
     */
    public void setUptDatetime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>slick_prod.USER.UPT_DATETIME</code>.
     */
    @NotNull
    public LocalDateTime getUptDatetime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>slick_prod.USER.UPT_ID</code>.
     */
    public void setUptId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>slick_prod.USER.UPT_ID</code>.
     */
    @NotNull
    @Size(max = 200)
    public String getUptId() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(JUser.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(String email, String password, LocalDateTime regDatetime, String regId, LocalDateTime uptDatetime, String uptId) {
        super(JUser.USER);

        setEmail(email);
        setPassword(password);
        setRegDatetime(regDatetime);
        setRegId(regId);
        setUptDatetime(uptDatetime);
        setUptId(uptId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(User value) {
        super(JUser.USER);

        if (value != null) {
            setEmail(value.getEmail());
            setPassword(value.getPassword());
            setRegDatetime(value.getRegDatetime());
            setRegId(value.getRegId());
            setUptDatetime(value.getUptDatetime());
            setUptId(value.getUptId());
            resetChangedOnNotNull();
        }
    }
}
