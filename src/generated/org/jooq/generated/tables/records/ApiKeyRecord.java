/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JApiKey;
import org.jooq.generated.tables.pojos.ApiKey;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ApiKeyRecord extends UpdatableRecordImpl<ApiKeyRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>slick_dev.API_KEY.KEY</code>.
     */
    public void setKey(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>slick_dev.API_KEY.KEY</code>.
     */
    @NotNull
    @Size(max = 128)
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>slick_dev.API_KEY.EMAIL</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>slick_dev.API_KEY.EMAIL</code>.
     */
    @NotNull
    @Size(max = 100)
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>slick_dev.API_KEY.USE_YN</code>.
     */
    public void setUseYn(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>slick_dev.API_KEY.USE_YN</code>.
     */
    @Size(max = 1)
    public String getUseYn() {
        return (String) get(2);
    }

    /**
     * Setter for <code>slick_dev.API_KEY.EXPIRED_DATETIME</code>.
     */
    public void setExpiredDatetime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>slick_dev.API_KEY.EXPIRED_DATETIME</code>.
     */
    @NotNull
    public LocalDateTime getExpiredDatetime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>slick_dev.API_KEY.ROLE</code>.
     */
    public void setRole(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>slick_dev.API_KEY.ROLE</code>.
     */
    @Size(max = 10)
    public String getRole() {
        return (String) get(4);
    }

    /**
     * Setter for <code>slick_dev.API_KEY.BUCKET_LEVEL</code>.
     */
    public void setBucketLevel(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>slick_dev.API_KEY.BUCKET_LEVEL</code>.
     */
    @Size(max = 10)
    public String getBucketLevel() {
        return (String) get(5);
    }

    /**
     * Setter for <code>slick_dev.API_KEY.REG_DATETIME</code>.
     */
    public void setRegDatetime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>slick_dev.API_KEY.REG_DATETIME</code>.
     */
    @NotNull
    public LocalDateTime getRegDatetime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>slick_dev.API_KEY.REG_ID</code>.
     */
    public void setRegId(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>slick_dev.API_KEY.REG_ID</code>.
     */
    @NotNull
    @Size(max = 200)
    public String getRegId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>slick_dev.API_KEY.UPT_DATETIME</code>.
     */
    public void setUptDatetime(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>slick_dev.API_KEY.UPT_DATETIME</code>.
     */
    @NotNull
    public LocalDateTime getUptDatetime() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>slick_dev.API_KEY.UPT_ID</code>.
     */
    public void setUptId(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>slick_dev.API_KEY.UPT_ID</code>.
     */
    @NotNull
    @Size(max = 200)
    public String getUptId() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApiKeyRecord
     */
    public ApiKeyRecord() {
        super(JApiKey.API_KEY);
    }

    /**
     * Create a detached, initialised ApiKeyRecord
     */
    public ApiKeyRecord(String key, String email, String useYn, LocalDateTime expiredDatetime, String role, String bucketLevel, LocalDateTime regDatetime, String regId, LocalDateTime uptDatetime, String uptId) {
        super(JApiKey.API_KEY);

        setKey(key);
        setEmail(email);
        setUseYn(useYn);
        setExpiredDatetime(expiredDatetime);
        setRole(role);
        setBucketLevel(bucketLevel);
        setRegDatetime(regDatetime);
        setRegId(regId);
        setUptDatetime(uptDatetime);
        setUptId(uptId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ApiKeyRecord
     */
    public ApiKeyRecord(ApiKey value) {
        super(JApiKey.API_KEY);

        if (value != null) {
            setKey(value.getKey());
            setEmail(value.getEmail());
            setUseYn(value.getUseYn());
            setExpiredDatetime(value.getExpiredDatetime());
            setRole(value.getRole());
            setBucketLevel(value.getBucketLevel());
            setRegDatetime(value.getRegDatetime());
            setRegId(value.getRegId());
            setUptDatetime(value.getUptDatetime());
            setUptId(value.getUptId());
            resetChangedOnNotNull();
        }
    }
}
